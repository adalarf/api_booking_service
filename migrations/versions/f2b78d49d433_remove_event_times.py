"""remove event times

Revision ID: f2b78d49d433
Revises: 1f48054c3d80
Create Date: 2024-12-08 14:03:52.391806

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f2b78d49d433'
down_revision: Union[str, None] = '1f48054c3d80'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('event_date_time',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('seats_number', sa.Integer(), nullable=True),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # op.drop_table('event_time')
    # op.drop_table('event_date')
    op.add_column('booking', sa.Column('event_date_time_id', sa.Integer(), nullable=True))
    # op.drop_constraint('booking_event_time_id_fkey', 'booking', type_='foreignkey')
    op.create_foreign_key(None, 'booking', 'event_date_time', ['event_date_time_id'], ['id'])
    op.drop_column('booking', 'event_time_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('booking', sa.Column('event_time_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'booking', type_='foreignkey')
    op.create_foreign_key('booking_event_time_id_fkey', 'booking', 'event_time', ['event_time_id'], ['id'])
    op.drop_column('booking', 'event_date_time_id')
    op.create_table('event_date',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('event_date_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('event_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], name='event_date_event_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='event_date_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('event_time',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('start_time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('end_time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('seats_number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['date_id'], ['event_date.id'], name='event_time_date_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='event_time_pkey')
    )
    op.drop_table('event_date_time')
    # ### end Alembic commands ###
